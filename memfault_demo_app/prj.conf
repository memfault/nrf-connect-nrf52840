CONFIG_FLASH=y

CONFIG_LOG=y

CONFIG_HEAP_MEM_POOL_SIZE=16384

CONFIG_SHELL=y
CONFIG_SHELL_LOG_LEVEL_INF=y

CONFIG_HWINFO=y

# CONFIG_FLASH_MAP=y
# CONFIG_FLASH_PAGE_LAYOUT=y

CONFIG_MAIN_STACK_SIZE=4096

# CONFIG_SHELL_BACKEND_SERIAL=y

CONFIG_MEMFAULT=y
CONFIG_MEMFAULT_NRF_CONNECT_SDK=y
CONFIG_MEMFAULT_NCS_INTERNAL_FLASH_BACKED_COREDUMP=y
CONFIG_MEMFAULT_RAM_BACKED_COREDUMP=n

# Disable root cert storage in our application by setting it to the non-existent
# modem
CONFIG_MEMFAULT_ROOT_CERT_STORAGE_CUSTOM=y

# Required for now
CONFIG_MEMFAULT_NCS_HW_VERSION="a"
CONFIG_MEMFAULT_NCS_FW_TYPE="nrf52_example"
CONFIG_MEMFAULT_NCS_FW_VERSION_STATIC=y
CONFIG_MEMFAULT_NCS_FW_VERSION="0.0.1"
CONFIG_MEMFAULT_NCS_DEVICE_ID_RUNTIME=y

# Required for logging backends to work as expected
CONFIG_LOG=y
CONFIG_LOG_BACKEND_UART=y

# Enable capture of recent logs as part of a coredump
CONFIG_MEMFAULT_LOGGING_ENABLE=y

# Enable Flash and Bootloader components for:
# - flash-backed coredump storage
# - OTA updates
CONFIG_BOOTLOADER_MCUBOOT=y
CONFIG_MCUBOOT_IMG_MANAGER=y
CONFIG_IMG_MANAGER=y
CONFIG_FLASH=y

# # The subsystems we need so OTA payloads can be written to
# # flash and updated by MCUBoot
# CONFIG_DFU_TARGET=y
# CONFIG_DFU_TARGET_MCUBOOT=y
# CONFIG_IMG_ERASE_PROGRESSIVELY=y

# Enable printing of file download progress to console
CONFIG_FOTA_DOWNLOAD_PROGRESS_EVT=y

CONFIG_WATCHDOG=y
